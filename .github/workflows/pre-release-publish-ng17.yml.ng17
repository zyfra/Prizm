# TODO: later change tag by input variable ${{ inputs.tag }}
name: Publish next packages 17
on:
  workflow_dispatch:
  workflow_call:
env:
  npmrc_config_push: ${{ secrets.NPMRC_CONFIG_PUSH }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_PUBLISH_TOKEN }}
permissions:
  contents: read
  packages: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Restore cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      #      - name: 'Initial changes 17'
      #        run: |
      #          cp -f package.json package.json
      #          cp -f package-lock.json package-lock.json

      - name: Install dependencies
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Save cache...
        id: cache-save
        uses: actions/cache/save@v3
        if: ${{ steps.cache-restore.outputs.cache-hit != 'true' && always() }}
        with:
          path: ./node_modules
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}

      - name: 'Increase max memory limit'
        run: |
          export NODE_OPTIONS="--max_old_space_size=8192"

      - name: Set up environment variables
        run: |
          last_next_version=$(
            (npm view @prizm-ui/components versions --tag next --json 2>/dev/null || echo '<%= version %>-next.0') | jq '([.[] | select(startswith("<%= version %>-next"))] | last // "<%= version %>-next.0")' 2>/dev/null || echo '<%= version %>-next.0'
          )
          echo "LAST_NEXT_VERSION=${last_next_version}" >> $GITHUB_ENV

      #      - name: 'Set version 17'
      #        run: npx nx generate @prizm-ui/nx-mv:apply -n v17

      - name: 'Update next versions'
        run: npx nx generate @prizm-ui/nx-plugin:update-version --updateInDependencies true --newVersion="4.*.*-next.up" --all --currentVersion="${{ env.LAST_NEXT_VERSION }}"

      - name: 'Build next versions'
        run: npx nx run-many --target=build --all --parallel --max-parallel=3

      - name: Upload dist as artifacts...
        id: dist-cache-save
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist

  deploy_to_doc:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: 'Build doc app for firebase hosting'
        run: npm run build:doc

      - name: Deploy doc to firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_PRIZMUI }}'
          projectId: prizmui
          channelId: live
          target: v4-next

  publish-components:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/components && npm publish --tag next --access public --verbose

  publish-i18n:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/i18n && npm publish --tag next --access public --verbose

  publish-helpers:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/helpers && npm publish --tag next --access public --verbose

  publish-core:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/core && npm publish --tag next --access public --verbose

  publish-theme:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/theme && npm publish --tag next --access public --verbose

  publish-icons:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/icons/base && npm publish --tag next --access public --verbose

  publish-flags:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/icons/flags && npm publish --tag next --access public --verbose

  publish-plugin:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/plugin && npm publish --tag next --access public --verbose

  publish-ast:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/ast && npm publish --tag next --access public --verbose

  publish-charts:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/charts && npm publish --tag next --access public --verbose

  publish-nxmv:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Restore node_modules in cache
        uses: actions/cache/restore@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node_modules_ng_17-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules_ng_17-

      - name: Download dist from artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - run: cd dist/libs/nxmv && npm publish --tag next --access public --verbose
